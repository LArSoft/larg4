BEGIN_PROLOG

standard_larg4:
{
    module_type: "larg4Main"
    enableVisualization: false
    macroPath: ".:./macros"
    visMacro: "vis.mac"
}

END_PROLOG

#no experiment specific configurations because larg4SingleGen is detector agnostic

standard_singlep:
{
 module_type:           "larg4SingleGen"
 ParticleSelectionMode: "all"       # 0 = use full list, 1 =  randomly select a single listed particle
 PadOutVectors:        false        # false: require all vectors to be same length
                                    # true:  pad out if a vector is size one
 PDG:                   [ 13 ]      # list of pdg codes for particles to make
 P0:                    [ 6. ]      # central value of momentum for each particle
 SigmaP:                [ 0. ]      # variation about the central value
 PDist:                 "Gaussian"  # 0 - uniform, 1 - gaussian distribution
 X0:                    [ 0. ]     # in cm in world coordinates, ie x = 0 is at the wire plane
                                    # and increases away from the wire plane
 Y0:                    [ 0. ]      # in cm in world coordinates, ie y = 0 is at the center of the TPC
 Z0:                    [ -130. ]   # in cm in world coordinates, ie z = 0 is at the upstream edge of
                                    # the TPC and increases with the beam direction
 T0:                    [ 0. ]      # starting time
 SigmaX:                [ 0. ]      # variation in the starting x position
 SigmaY:                [ 0. ]      # variation in the starting y position
 SigmaZ:                [ 0.0 ]     # variation in the starting z position
 SigmaT:                [ 0.0 ]     # variation in the starting time
 PosDist:               "uniform"   # 0 - uniform, 1 - gaussian
 TDist:                 "uniform"   # 0 - uniform, 1 - gaussian
 Theta0XZ:              [ 0. ]      #angle in XZ plane (degrees)
 Theta0YZ:              [ 0. ]      #angle in YZ plane (degrees)
 SigmaThetaXZ:          [ 0. ]      #in degrees
 SigmaThetaYZ:          [ 0. ]      #in degrees
 AngleDist:             "Gaussian"  # 0 - uniform, 1 - gaussian
}

process_name:processA
source: {
  module_type: EmptyEvent
  maxEvents:  100
}
services: {
  message : {
     debugModules : ["*"]
     suppressInfo : []
     destinations : {
       LogToConsole : {
         type : "cout"
         threshold : "DEBUG"
         categories : {
           default : { limit : 50 }
         }
       }
     }
  }
  TFileService :
  {
    fileName      : "testlarg4.root"
  }

    DetectorHolder: {}
    ActionHolder: {}
    RandomNumberGenerator: {}
    NuRandomService:{service_type: "NuRandomService"
      endOfJobSummary: true
      policy: "random"
}

    PhysicsListHolder: {}
    PhysicsList: {
    PhysicsListName: "FTFP_BERT"
    DumpList: false
      enableCerenkov: false
      enableScintillation: false
    ScintillationByParticleType: false
      enableAbsorption: false
      enableRayleigh: false
      enableMieHG: false
      enableBoundary: false
      enableWLS: false
}

    // Detector(s) for the simulation
    LArG4Detector :
    {
    category: "world"
    gdmlFileName_ : "lArDet.gdml"
    }

//    writeGdml: {
//      name: "writeGdml"
//      gdmlFileName:"output.gdml"
//    }

    ExampleGeneralAction: {
      name: "exampleGeneral"
    }
MCTruthEventAction: {service_type: "MCTruthEventActionService"}
ParticleListAction: {service_type: "ParticleListActionService"
  service_type:  "ParticleListActionService"
  EnergyCut: 1e-5 # Kinetic Energy cut in [MeV]
  keepEMShowerDaughters: true
  storeTrajectories: true
  keepGenTrajectories: ["generator"]       # list of generator labels for which we want to store
                                           # trajectory points. The protodune beam label is simply
                                           # "generator"
  keepOnlyPrimaryFullTrajectories : false  # (defaults to false in larg4) If set to true, only
                                           # the particles with MCTruth process == "primary" and
                                           # their descendants will have the full set of trajetory
                                           # points stored. Particles descending from primaries with
                                           # MCTruth process != "primary" will not have a full set
                                           # of trajectory points stored -- only their start and
                                           # end points. This filter only applies to the generator
                                           # labels listed in the keepGenTrajectories. E.g, for the
                                           # beam generator, no "primaryBackground" particles or their
                                           # descendants would have a full set of traj. points. if
                                           # this is set to true.
  SparsifyTrajectories: true               # call SparsifyTrajectory() method on MCParticles with full trajectories
                                           # being stored. This helps reduce memory usage in the root output stage
                                           # if there are many trajectory points.
  SparsifyMargin: 0.015      # required when SparsifyTrajectories is set to true
  KeepTransportation: true   # When sparsifying: forces steps with the 'Transportation' process to be saved
                             # --- Useful in protodune to keep the first step in the active volume
  KeepSecondToLast: true     # Sparsifying could cut out the penultimate step point, which holds the correct info
                             # of the end of the track (the final step is defined to have 0 kinetic energy)
                             # --- This forces that true penultimate point to be saved, thus preserving the info
}
}

outputs: {
out1: {
  module_type: RootOutput
  fileName: "Testingout.root"
  }
}

physics: {
  producers: {
    generator: @local::standard_singlep
    larg4Main: @local::standard_larg4
  }
  analyzers: {
   CheckSimEnergyDeposit: {   module_type: CheckSimEnergyDeposit
          hist_dir: "HistoDir"
          }
   CheckMCParticle: {   module_type: CheckMCParticle
          hist_dir: "HistoDir2"
          }
  CheckAuxDetHit: {   module_type: CheckAuxDetHit
          hist_dir: "HistoDir3"
          }

}

  path1: [ generator,larg4Main ]
  stream1:  [ out1,CheckSimEnergyDeposit,CheckMCParticle,CheckAuxDetHit]

  trigger_paths: [ path1 ]
  end_paths: [ stream1 ]
}
